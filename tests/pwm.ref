	processor pic18f248
	radix dec
	org 0x2000
	goto init_runtime

;---------------------------------------------------------
; Section: constants
;---------------------------------------------------------

; TBLPTRU: defined at lib/sfrnames.fs:13
TBLPTRU equ 0xff8

; TBLPTRH: defined at lib/sfrnames.fs:14
TBLPTRH equ 0xff7

; TBLPTRL: defined at lib/sfrnames.fs:15
TBLPTRL equ 0xff6

; TABLAT: defined at lib/sfrnames.fs:16
TABLAT equ 0xff5

; INTCON: defined at lib/sfrnames.fs:19
INTCON equ 0xff2

; INDF0: defined at lib/sfrnames.fs:23
INDF0 equ 0xfef

; POSTINC0: defined at lib/sfrnames.fs:24
POSTINC0 equ 0xfee

; POSTDEC0: defined at lib/sfrnames.fs:25
POSTDEC0 equ 0xfed

; PREINC0: defined at lib/sfrnames.fs:26
PREINC0 equ 0xfec

; PLUSW0: defined at lib/sfrnames.fs:27
PLUSW0 equ 0xfeb

; FSR0H: defined at lib/sfrnames.fs:28
FSR0H equ 0xfea

; FSR0L: defined at lib/sfrnames.fs:29
FSR0L equ 0xfe9

; WREG: defined at lib/sfrnames.fs:30
WREG equ 0xfe8

; INDF1: defined at lib/sfrnames.fs:31
INDF1 equ 0xfe7

; FSR1H: defined at lib/sfrnames.fs:36
FSR1H equ 0xfe2

; FSR1L: defined at lib/sfrnames.fs:37
FSR1L equ 0xfe1

; INDF2: defined at lib/sfrnames.fs:39
INDF2 equ 0xfdf

; POSTDEC2: defined at lib/sfrnames.fs:41
POSTDEC2 equ 0xfdd

; PREINC2: defined at lib/sfrnames.fs:42
PREINC2 equ 0xfdc

; FSR2H: defined at lib/sfrnames.fs:44
FSR2H equ 0xfda

; FSR2L: defined at lib/sfrnames.fs:45
FSR2L equ 0xfd9

; STATUS: defined at lib/sfrnames.fs:46
STATUS equ 0xfd8

; TMR0H: defined at lib/sfrnames.fs:47
TMR0H equ 0xfd7

; TMR0L: defined at lib/sfrnames.fs:48
TMR0L equ 0xfd6

; T0CON: defined at lib/sfrnames.fs:49
T0CON equ 0xfd5

; TMR1H: defined at lib/sfrnames.fs:55
TMR1H equ 0xfcf

; TMR1L: defined at lib/sfrnames.fs:56
TMR1L equ 0xfce

; T1CON: defined at lib/sfrnames.fs:57
T1CON equ 0xfcd

; ADCON1: defined at lib/sfrnames.fs:69
ADCON1 equ 0xfc1

; RCREG: defined at lib/sfrnames.fs:85
RCREG equ 0xfae

; TXREG: defined at lib/sfrnames.fs:86
TXREG equ 0xfad

; EEADR: defined at lib/sfrnames.fs:89
EEADR equ 0xfa9

; EEDATA: defined at lib/sfrnames.fs:90
EEDATA equ 0xfa8

; EECON1: defined at lib/sfrnames.fs:92
EECON1 equ 0xfa6

; PIR1: defined at lib/sfrnames.fs:100
PIR1 equ 0xf9e

; TRISC: defined at lib/sfrnames.fs:104
TRISC equ 0xf94

; TRISA: defined at lib/sfrnames.fs:106
TRISA equ 0xf92

; LATC: defined at lib/sfrnames.fs:109
LATC equ 0xf8b

; LATA: defined at lib/sfrnames.fs:111
LATA equ 0xf89

; main-time: defined at tests/pwm.fs:3
main_MI_time equ -28000

; pulse-max: defined at tests/pwm.fs:5
pulse_MI_max equ -6000

; delta: defined at tests/pwm.fs:7
delta equ 10

;---------------------------------------------------------
; Section: code
;---------------------------------------------------------

; .: defined at lib/strings.fs:25
_DT_
	call _1_GT_2
	call emit_MI_8

; emit-8: defined at lib/strings.fs:24
emit_MI_8
	call dup
	movf POSTDEC0,0,0
	swapf POSTINC0,1,0
	movlw 0xf
	movwf PREINC0,0
	clrf PREINC0,0
	call and
	call emit_MI_4
	movlw 0xf
	movwf PREINC0,0
	clrf PREINC0,0
	call and

; emit-4: defined at lib/strings.fs:23
emit_MI_4
	call nibble_MI_to_MI_hex
	movwf PREINC0,0
	clrf PREINC0,0

; emit: defined at lib/tty-rs232.fs:4
emit
	btfss PIR1,4,0
	bra emit
	movf POSTDEC0,0,0
	movff POSTDEC0,TXREG
	return

; >=: defined at lib/arithmetic.fs:175
_GT__EQ_
	call _2dupxor_GT_w
	btfss WREG,7,0
	bra _lbl___25
	movf POSTDEC0,1,0
	movf POSTDEC0,1,0
	call _0_LT_
	goto op_zeroeq
_lbl___25
	call op_minus
	call _0_LT_

; op_zeroeq: defined at lib/primitives.fs:70
op_zeroeq
	movf POSTDEC0,0,0
	iorwf POSTDEC0,0,0

; op_zeroeq_z: defined at lib/primitives.fs:61
op_zeroeq_z
	movlw -1
	btfss STATUS,2,0
	addlw 1
	movwf PREINC0,0
	movwf PREINC0,0
	return

; tmr1-wait: defined at tests/pwm.fs:14
tmr1_MI_wait
	btfsc PIR1,0,0
	return
	bra tmr1_MI_wait

; main: defined at tests/pwm.fs:74
main
	call greetings
	call init_MI_pwm

; main-loop: defined at tests/pwm.fs:32
main_MI_loop
	movlw LOW(-6000)
	movwf pulse0,1
	movlw HIGH(-6000)
	movwf (pulse0+1),1
	movlw LOW(-6000)
	movwf pulse1,1
	movlw HIGH(-6000)
	movwf (pulse1+1),1
_lbl___203
	call pwm
	call key
	call dup
	movlw 48
	movwf PREINC0,0
	clrf PREINC0,0
	call xor
	movf POSTDEC0,0,0
	iorwf POSTDEC0,0,0
	bnz _lbl___205
	call read16
	movff POSTDEC0,(pulse0+1)
	movff POSTDEC0,pulse0
	movlw LOW((_data___1+0x8000))
	movwf PREINC0,0
	movlw HIGH((_data___1+0x8000))
	movwf PREINC0,0
	movlw 1
	movwf PREINC0,0
	clrf PREINC0,0
	call type
_lbl___205
	call dup
	movlw 49
	movwf PREINC0,0
	clrf PREINC0,0
	call xor
	movf POSTDEC0,0,0
	iorwf POSTDEC0,0,0
	bnz _lbl___207
	call read16
	movff POSTDEC0,(pulse1+1)
	movff POSTDEC0,pulse1
	movlw LOW((_data___2+0x8000))
	movwf PREINC0,0
	movlw HIGH((_data___2+0x8000))
	movwf PREINC0,0
	movlw 1
	movwf PREINC0,0
	clrf PREINC0,0
	call type
_lbl___207
	call dup
	movlw 112
	movwf PREINC0,0
	clrf PREINC0,0
	call xor
	movf POSTDEC0,0,0
	iorwf POSTDEC0,0,0
	bnz _lbl___209
	movlw LOW((_data___3+0x8000))
	movwf PREINC0,0
	movlw HIGH((_data___3+0x8000))
	movwf PREINC0,0
	movlw 8
	movwf PREINC0,0
	clrf PREINC0,0
	call type
	movff pulse0,PREINC0
	movff (pulse0+1),PREINC0
	call _DT_
	call cr
	movlw LOW((_data___4+0x8000))
	movwf PREINC0,0
	movlw HIGH((_data___4+0x8000))
	movwf PREINC0,0
	movlw 8
	movwf PREINC0,0
	clrf PREINC0,0
	call type
	movff pulse1,PREINC0
	movff (pulse1+1),PREINC0
	call _DT_
	call cr
_lbl___209
	call dup
	movlw 43
	movwf PREINC0,0
	clrf PREINC0,0
	call xor
	movf POSTDEC0,0,0
	iorwf POSTDEC0,0,0
	bnz _lbl___211
	movff pulse1,PREINC0
	movff (pulse1+1),PREINC0
	movlw LOW(delta)
	movf POSTDEC0,1,0
	addwf POSTINC0,1,0
	movlw HIGH(delta)
	addwfc INDF0,1,0
	movff POSTDEC0,(pulse1+1)
	movff POSTDEC0,pulse1
	movlw LOW((_data___5+0x8000))
	movwf PREINC0,0
	movlw HIGH((_data___5+0x8000))
	movwf PREINC0,0
	movlw 1
	movwf PREINC0,0
	clrf PREINC0,0
	call type
	movff pulse1,PREINC0
	movff (pulse1+1),PREINC0
	call _DT_
	call cr
_lbl___211
	call dup
	movlw 45
	movwf PREINC0,0
	clrf PREINC0,0
	call xor
	movf POSTDEC0,0,0
	iorwf POSTDEC0,0,0
	bnz _lbl___213
	movff pulse1,PREINC0
	movff (pulse1+1),PREINC0
	movlw LOW((-delta))
	movf POSTDEC0,1,0
	addwf POSTINC0,1,0
	movlw HIGH((-delta))
	addwfc INDF0,1,0
	movff POSTDEC0,(pulse1+1)
	movff POSTDEC0,pulse1
	movlw LOW((_data___6+0x8000))
	movwf PREINC0,0
	movlw HIGH((_data___6+0x8000))
	movwf PREINC0,0
	movlw 1
	movwf PREINC0,0
	clrf PREINC0,0
	call type
	movff pulse1,PREINC0
	movff (pulse1+1),PREINC0
	call _DT_
	call cr
_lbl___213
	movf POSTDEC0,1,0
	movf POSTDEC0,1,0
	bra _lbl___203

; read8: defined at lib/strings.fs:69
read8
	call read4
	movf POSTDEC0,0,0
	swapf POSTINC0,1,0
	call read4

; or: defined at lib/arithmetic.fs:75
or
	movff POSTDEC0,temp_x1
	movf POSTDEC0,0,0
	movf POSTDEC0,1,0
	iorwf POSTINC0,1,0
	movf temp_x1,0,0
	iorwf INDF0,1,0
	return

; table-addr!: defined at lib/tables.fs:1
table_MI_addr_EX_
	clrf TBLPTRU,0
	call _1_GT_2
	movf POSTDEC0,0,0
	movff POSTDEC0,TBLPTRH
	movf POSTDEC0,0,0
	movff POSTDEC0,TBLPTRL
	bcf EECON1,6,0
	return

; greetings: defined at tests/pwm.fs:62
greetings
	movlw LOW((_data___7+0x8000))
	movwf PREINC0,0
	movlw HIGH((_data___7+0x8000))
	movwf PREINC0,0
	movlw 18
	movwf PREINC0,0
	clrf PREINC0,0

; type: defined at lib/strings.fs:27
type
	call dup
	movf POSTDEC0,0,0
	iorwf POSTDEC0,0,0
	btfsc STATUS,2,0
	goto _2drop
	movf POSTDEC0,0
	movf POSTDEC0,0
	movwf PREINC2,0
_lbl___88
	call dup
	call op_cfetch_tos
	call emit
	movf POSTDEC0,0,0
	infsnz POSTINC0,1,0
	incf INDF0,1,0
	decfsz INDF2,1,0
	bra _lbl___88
	movf POSTDEC2,1,0
	movf POSTDEC0,1,0
	movf POSTDEC0,1,0
	return

; init_runtime: defined at lib/primitives.fs:3
init_runtime
	movlb 1
	clrf pulse0,1
	clrf (pulse0+1),1
	clrf pulse1,1
	clrf (pulse1+1),1
	movlw 0x5f
	movwf FSR0L,0
	clrf FSR0H,0
	movlw 0xbf
	movwf FSR2L,0
	clrf FSR2H,0
	goto main

; flash-addr!: defined at lib/tables.fs:3
flash_MI_addr_EX_
	bcf INDF0,7,0
	bsf EECON1,7,0
	bra table_MI_addr_EX_

; cr: defined at lib/strings.fs:8
cr
	movlw 0xa
	movwf PREINC0,0
	clrf PREINC0,0
	call emit
	movlw 0xd
	movwf PREINC0,0
	clrf PREINC0,0
	goto emit

; dup: defined at lib/primitives.fs:29
dup
	movlw -1
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	return

; op_cfetch_tos: defined at lib/primitives.fs:197
op_cfetch_tos
	btfsc INDF0,7,0
	goto flashc_AT_
	btfsc INDF0,4,0
	goto eepromc_AT_
	movff POSTDEC0,FSR1H
	movff POSTDEC0,FSR1L
	movff INDF1,PREINC0
	clrf PREINC0,0
	return

; swap: defined at lib/primitives.fs:241
swap
	movff POSTDEC0,(temp_x1+1)
	movff POSTDEC0,temp_x1
	movff POSTDEC0,PREINC2
	movff POSTDEC0,PREINC2
	movff temp_x1,PREINC0
	movff (temp_x1+1),PREINC0
	movff POSTDEC2,PREINC0
	movff POSTDEC2,PREINC0
	return

; 2drop: defined at lib/primitives.fs:243
_2drop
	movf POSTDEC0,1,0
	movf POSTDEC0,1,0
	movf POSTDEC0,1,0
	movf POSTDEC0,1,0
	return

; op_minus: defined at lib/arithmetic.fs:39
op_minus
	movff POSTDEC0,temp_x1
	movf POSTDEC0,0,0
	movf POSTDEC0,1,0
	subwf POSTINC0,1,0
	movf temp_x1,0,0
	subwfb INDF0,1,0
	return

; and: defined at lib/arithmetic.fs:63
and
	movff POSTDEC0,temp_x1
	movf POSTDEC0,0,0
	movf POSTDEC0,1,0
	andwf POSTINC0,1,0
	movf temp_x1,0,0
	andwf INDF0,1,0
	return

; xor: defined at lib/arithmetic.fs:87
xor
	movff POSTDEC0,temp_x1
	movf POSTDEC0,0,0
	movf POSTDEC0,1,0
	xorwf POSTINC0,1,0
	movf temp_x1,0,0
	xorwf INDF0,1,0
	return

; 1>2: defined at lib/arithmetic.fs:106
_1_GT_2
	movf INDF0,0,0
	clrf INDF0,0
	movwf PREINC0,0
	clrf PREINC0,0
	return

; 0<: defined at lib/arithmetic.fs:140
_0_LT_
	movlw -1
	btfss POSTDEC0,7,0
	movlw 0
	movwf POSTINC0,0
	movwf INDF0,0
	return

; 2dupxor>w: defined at lib/arithmetic.fs:159
_2dupxor_GT_w
	movf POSTDEC0,1,0
	movf POSTDEC0,1,0
	movf POSTINC0,0,0
	xorwf PREINC0,0,0
	return

; flashc@: defined at lib/tables.fs:14
flashc_AT_
	call flash_MI_addr_EX_
	tblrd*+
	movff TABLAT,PREINC0
	clrf PREINC0,0
	return

; eeprom-addr!: defined at lib/tables.fs:17
eeprom_MI_addr_EX_
	movwf EEADR,0
	bcf EECON1,7,0
	bcf EECON1,6,0
	return

; eepromc@: defined at lib/tables.fs:19
eepromc_AT_
	call eeprom_MI_addr_EX_
	bsf EECON1,0,0
	movf EEDATA,0,0
	return

; nibble-to-hex: defined at lib/strings.fs:11
nibble_MI_to_MI_hex
	movf POSTDEC0,0,0
	movlw 0xf6
	addwf INDF0,1,0
	movlw 0x3a
	btfsc STATUS,0,0
	addlw 7
	addwf POSTDEC0,0,0
	return

; read4: defined at lib/strings.fs:68
read4
	call key
	call dup
	movlw 65
	movwf PREINC0,0
	clrf PREINC0,0
	call _GT__EQ_
	movf POSTDEC0,0,0
	iorwf POSTDEC0,0,0
	bz _lbl___95
	movlw 223
	movwf PREINC0,0
	clrf PREINC0,0
	call and
	movlw LOW((-55))
	movf POSTDEC0,1,0
	addwf POSTINC0,1,0
	movlw HIGH((-55))
	addwfc INDF0,1,0
	return
_lbl___95
	movlw LOW((-48))
	movf POSTDEC0,1,0
	addwf POSTINC0,1,0
	movlw HIGH((-48))
	addwfc INDF0,1,0
	return

; read16: defined at lib/strings.fs:70
read16
	call read8
	call read8
	call swap
	movf POSTDEC0,0,0
	movf POSTDEC0,0,0
	movwf INDF0,0
	return

; key: defined at lib/tty-rs232.fs:5
key
	btfss PIR1,5,0
	bra key
	movff RCREG,PREINC0
	clrf PREINC0,0
	return

; set-tmr0-wait: defined at tests/pwm.fs:12
set_MI_tmr0_MI_wait
	call _1_GT_2
	movf POSTDEC0,0,0
	movff POSTDEC0,TMR0H
	movf POSTDEC0,0,0
	movff POSTDEC0,TMR0L
	bcf INTCON,2,0
_lbl___191
	btfsc INTCON,2,0
	return
	bra _lbl___191

; set-tmr1: defined at tests/pwm.fs:16
set_MI_tmr1
	call _1_GT_2
	movf POSTDEC0,0,0
	movff POSTDEC0,TMR1H
	movf POSTDEC0,0,0
	movff POSTDEC0,TMR1L
	bcf PIR1,0,0
	return

; pwm: defined at tests/pwm.fs:18
pwm
	movlw LOW(pulse_MI_max)
	movwf PREINC0,0
	movlw HIGH(pulse_MI_max)
	movwf PREINC0,0
	call set_MI_tmr1
	bsf LATA,2,0
	movff pulse0,PREINC0
	movff (pulse0+1),PREINC0
	call set_MI_tmr0_MI_wait
	bcf LATA,2,0
	call tmr1_MI_wait
	movlw LOW(pulse_MI_max)
	movwf PREINC0,0
	movlw HIGH(pulse_MI_max)
	movwf PREINC0,0
	call set_MI_tmr1
	bsf LATC,1,0
	movff pulse1,PREINC0
	movff (pulse1+1),PREINC0
	call set_MI_tmr0_MI_wait
	bcf LATC,1,0
	call tmr1_MI_wait
	movlw LOW(main_MI_time)
	movwf PREINC0,0
	movlw HIGH(main_MI_time)
	movwf PREINC0,0
	call set_MI_tmr1
_lbl___199
	btfsc PIR1,5,0
	return
	btfsc PIR1,0,0
	bra pwm
	bra _lbl___199

; init-pwm: defined at tests/pwm.fs:65
init_MI_pwm
	movlw 7
	movwf ADCON1,0
	bcf TRISA,2,0
	bcf TRISC,1,0
	movlw 0x88
	movwf T0CON,0
	clrf TMR1H,0
	clrf TMR1L,0
	movlw 0x91
	movwf T1CON,0
	return

;---------------------------------------------------------
; Section: memory
;---------------------------------------------------------

; temp_x1: defined at lib/primitives.fs:22
temp_x1 equ 0x0

; pulse0: defined at tests/pwm.fs:9
pulse0 equ 0x100

; pulse1: defined at tests/pwm.fs:10
pulse1 equ 0x102

;---------------------------------------------------------
; Section: static data
;---------------------------------------------------------

; defined at tests/pwm.fs:41 as:
; 0
_data___1
	db 48

; defined at tests/pwm.fs:45 as:
; 1
_data___2
	db 49

; defined at tests/pwm.fs:48 as:
; PWM 0 : 
_data___3
	db 80,87,77,32,48,32,58,32

; defined at tests/pwm.fs:49 as:
; PWM 1 : 
_data___4
	db 80,87,77,32,49,32,58,32

; defined at tests/pwm.fs:53 as:
; +
_data___5
	db 43

; defined at tests/pwm.fs:57 as:
; -
_data___6
	db 45

; defined at tests/pwm.fs:63 as:
; \nPWM Generator>\n
_data___7
	db 13,10,80,87,77,32,71,101
	db 110,101,114,97,116,111,114,62
	db 13,10

END
