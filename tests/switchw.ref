	processor pic18f248
	radix dec
	org 0x2000
	goto init_runtime

;---------------------------------------------------------
; Section: constants
;---------------------------------------------------------

TBLPTRU equ 0xff8

TBLPTRH equ 0xff7

TBLPTRL equ 0xff6

TABLAT equ 0xff5

INDF0 equ 0xfef

POSTINC0 equ 0xfee

POSTDEC0 equ 0xfed

PREINC0 equ 0xfec

PLUSW0 equ 0xfeb

FSR0H equ 0xfea

FSR0L equ 0xfe9

WREG equ 0xfe8

INDF1 equ 0xfe7

FSR1H equ 0xfe2

FSR1L equ 0xfe1

INDF2 equ 0xfdf

POSTDEC2 equ 0xfdd

PREINC2 equ 0xfdc

FSR2H equ 0xfda

FSR2L equ 0xfd9

STATUS equ 0xfd8

RCREG equ 0xfae

TXREG equ 0xfad

EEADR equ 0xfa9

EEDATA equ 0xfa8

EECON1 equ 0xfa6

PIR1 equ 0xf9e

;---------------------------------------------------------
; Section: code
;---------------------------------------------------------

init_runtime
	movlb 1
	movlw 0x5f
	movwf FSR0L,0
	clrf FSR0H,0
	movlw 0xbf
	movwf FSR2L,0
	clrf FSR2H,0

main
	call read4
	movf POSTDEC0,0,0
	movf POSTDEC0,0,0
	call handle_MI_key
	bra main

op_zeroeq
	movf POSTDEC0,0,0
	iorwf POSTDEC0,0,0

op_zeroeq_z
	movlw -1
	btfss STATUS,2,0
	addlw 1
	movwf PREINC0,0
	movwf PREINC0,0
	return

table_MI_addr_EX_
	clrf TBLPTRU,0
	call _1_GT_2
	movf POSTDEC0,0,0
	movff POSTDEC0,TBLPTRH
	movf POSTDEC0,0,0
	movff POSTDEC0,TBLPTRL
	bcf EECON1,6,0
	return

handle_MI_key
	xorlw 0
	bnz _lbl___206
	movlw LOW((_data___1+0x8000))
	movwf PREINC0,0
	movlw HIGH((_data___1+0x8000))
	movwf PREINC0,0
	movlw 3
	goto type
_lbl___206
	xorlw 1
	bnz _lbl___207
	movlw LOW((_data___2+0x8000))
	movwf PREINC0,0
	movlw HIGH((_data___2+0x8000))
	movwf PREINC0,0
	movlw 3
	goto type
_lbl___207
	xorlw 3
	btfss STATUS,2,0
	return
	movlw LOW((_data___3+0x8000))
	movwf PREINC0,0
	movlw HIGH((_data___3+0x8000))
	movwf PREINC0,0
	movlw 3

type
	movwf PREINC2,0
	iorlw 0
	bz _lbl___91
_lbl___93
	call op_dup,0
	call op_cfetch_tos
	movf POSTDEC0,0,0
	movf POSTDEC0,0,0
	call emit
	movf POSTDEC0,0,0
	infsnz POSTINC0,1,0
	incf INDF0,1,0
	decfsz INDF2,1,0
	bra _lbl___93
_lbl___91
	movf POSTDEC2,1,0
	movf POSTDEC0,0,0
	movf POSTDEC0,0,0
	return

_GT__EQ_
	call _2dupxor_GT_w
	btfss WREG,7,0
	bra _lbl___25
	movf POSTDEC0,0,0
	movf POSTDEC0,0,0
	call _0_LT_
	goto op_zeroeq
_lbl___25
	call op_minus
	call _0_LT_
	goto op_zeroeq

flash_MI_addr_EX_
	bcf INDF0,7,0
	bsf EECON1,7,0
	bra table_MI_addr_EX_

op_dup
	movlw -1
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	return

op_cfetch_tos
	btfsc INDF0,7,0
	goto flashc_AT_
	btfsc INDF0,4,0
	goto eepromc_AT_
	movff POSTDEC0,FSR1H
	movff POSTDEC0,FSR1L
	movff INDF1,PREINC0
	clrf PREINC0,0
	return

op_minus
	movff POSTDEC0,temp_x1
	movf POSTDEC0,0,0
	movf POSTDEC0,1,0
	subwf POSTINC0,1,0
	movf temp_x1,0,0
	subwfb INDF0,1,0
	return

_1_GT_2
	movf INDF0,0,0
	clrf INDF0,0
	movwf PREINC0,0
	clrf PREINC0,0
	return

_0_LT_
	movlw -1
	btfss POSTDEC0,7,0
	movlw 0
	movwf POSTINC0,0
	movwf INDF0,0
	return

_2dupxor_GT_w
	movf POSTDEC0,1,0
	movf POSTDEC0,1,0
	movf POSTINC0,0,0
	xorwf PREINC0,0,0
	return

flashc_AT_
	call flash_MI_addr_EX_
	tblrd*+
	movff TABLAT,PREINC0
	clrf PREINC0,0
	return

eeprom_MI_addr_EX_
	movwf EEADR,0
	bcf EECON1,7,0
	bcf EECON1,6,0
	return

eepromc_AT_
	call eeprom_MI_addr_EX_
	bsf EECON1,0,0
	movf EEDATA,0,0
	return

read4
	call key
	movwf PREINC0,0
	clrf PREINC0,0
	movwf PREINC0,0
	clrf PREINC0,0
	movlw 65
	movwf PREINC0,0
	clrf PREINC0,0
	call _GT__EQ_
	movf POSTDEC0,0,0
	iorwf POSTDEC0,0,0
	bz _lbl___102
	movf POSTDEC0,0,0
	movf POSTDEC0,0,0
	andlw 223
	movwf PREINC0,0
	clrf PREINC0,0
	movlw LOW((-55))
	movf POSTDEC0,1,0
	addwf POSTINC0,1,0
	movlw HIGH((-55))
	addwfc INDF0,1,0
	return
_lbl___102
	movlw LOW((-48))
	movf POSTDEC0,1,0
	addwf POSTINC0,1,0
	movlw HIGH((-48))
	addwfc INDF0,1,0
	return

emit
	btfss PIR1,4,0
	bra emit
	movwf TXREG,0
	return

key
	btfss PIR1,5,0
	bra key
	movf RCREG,0,0
	return

;---------------------------------------------------------
; Section: memory
;---------------------------------------------------------

temp_x1 equ 0x0

;---------------------------------------------------------
; Section: static data
;---------------------------------------------------------

_data___1
	db 48,48,48

_data___2
	db 49,49,49

_data___3
	db 50,50,50

END
