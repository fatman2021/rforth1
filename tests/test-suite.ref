	processor pic18f248
	radix dec
	org 0x2000
	goto init_runtime

;---------------------------------------------------------
; Section: constants
;---------------------------------------------------------

TBLPTRU equ 0xff8

TBLPTRH equ 0xff7

TBLPTRL equ 0xff6

TABLAT equ 0xff5

PRODH equ 0xff4

PRODL equ 0xff3

INDF0 equ 0xfef

POSTINC0 equ 0xfee

POSTDEC0 equ 0xfed

PREINC0 equ 0xfec

PLUSW0 equ 0xfeb

FSR0H equ 0xfea

FSR0L equ 0xfe9

WREG equ 0xfe8

INDF1 equ 0xfe7

POSTINC1 equ 0xfe6

FSR1H equ 0xfe2

FSR1L equ 0xfe1

INDF2 equ 0xfdf

POSTDEC2 equ 0xfdd

PREINC2 equ 0xfdc

FSR2H equ 0xfda

FSR2L equ 0xfd9

STATUS equ 0xfd8

TXREG equ 0xfad

EEADR equ 0xfa9

EEDATA equ 0xfa8

EECON1 equ 0xfa6

PIR1 equ 0xf9e

bl equ 0x20

;---------------------------------------------------------
; Section: code
;---------------------------------------------------------

init_runtime
	movlb 1
	clrf x,1
	clrf (x+1),1
	movlw 0x5f
	movwf FSR0L,0
	clrf FSR0H,0
	movlw 0xbf
	movwf FSR2L,0
	clrf FSR2H,0

main
	call greetings
	call _DT_s
	call cr
	movlw 10
	movwf PREINC0,0
	clrf PREINC0,0
	call test_MI_abs
	movlw LOW(-10)
	movwf PREINC0,0
	movlw HIGH(-10)
	movwf PREINC0,0
	call test_MI_abs
	clrf PREINC0,0
	clrf PREINC0,0
	call test_MI_abs
	call _DT_s
	call cr
	call test_MI_plus
	call _DT_s
	call cr
	call test_MI_minus
	call _DT_s
	call cr
	call test_MI_plus_EX_
	call _DT_s
	call cr
	call test_MI_minus_EX_
	call _DT_s
	call cr
	call test_MI_bool
	call _DT_s
	call cr
	call test_MI_swap
	call _DT_s
	call cr
	call test_MI_2_ST_
	call _DT_s
	call cr
	call test_MI_2_SL_
	call _DT_s
	call cr
	call test_MI_mult
	call _DT_s
	call cr
	call test_MI_div
	call _DT_s

cr
	movlw 0xa
	call emit
	movlw 0xd

emit
	btfss PIR1,4,0
	bra emit
	movwf TXREG,0
	return

greetings
	movlw LOW((_data___1+0x8000))
	movwf PREINC0,0
	movlw HIGH((_data___1+0x8000))
	movwf PREINC0,0
	movlw 10

type
	movwf PREINC2,0
	iorlw 0
	bz _lbl___91
_lbl___93
	call op_dup,0
	call op_cfetch_tos
	movf POSTDEC0,0,0
	movf POSTDEC0,0,0
	call emit
	movf POSTDEC0,0,0
	infsnz POSTINC0,1,0
	incf INDF0,1,0
	decfsz INDF2,1,0
	bra _lbl___93
_lbl___91
	movf POSTDEC2,1,0
	movf POSTDEC0,0,0
	movf POSTDEC0,0,0
	return

_ST__SL_
	bcf math_MI_flags,0,0
	call normalize_MI_tos_MI_3
	movff POSTDEC0,PREINC2
	movff POSTDEC0,PREINC2
	movff POSTDEC0,(temp_w+1)
	movff POSTDEC0,temp_w
	movff POSTDEC0,(temp_l+1)
	movff POSTDEC0,temp_l
	call mulw
	movff POSTDEC2,PREINC0
	movff POSTDEC2,PREINC0
	movff POSTDEC0,(temp_l+1)
	movff POSTDEC0,temp_l
	call div32
	movff temp_w,PREINC0
	movff (temp_w+1),PREINC0

apply_MI_sign
	btfss math_MI_flags,0,0
	return

negate
	comf POSTDEC0,1,0
	negf POSTINC0,0
	movlw 0
	addwfc INDF0,1,0
	return

_LT__EQ_
	call swap

_GT__EQ_
	call _2dupxor_GT_w
	btfss WREG,7,0
	bra _lbl___25
	movf POSTDEC0,0,0
	movf POSTDEC0,0,0
	call _0_LT_
	goto op_zeroeq
_lbl___25
	call op_minus
	call _0_LT_

op_zeroeq
	movf POSTDEC0,0,0
	iorwf POSTDEC0,0,0

op_zeroeq_z
	movlw -1
	btfss STATUS,2,0
	addlw 1
	movwf PREINC0,0
	movwf PREINC0,0
	return

_GT_
	call swap

_LT_
	call _2dupxor_GT_w
	btfss WREG,7,0
	bra _lbl___21
	movf POSTDEC0,0,0
	movf POSTDEC0,0,0
	goto _0_LT_
_lbl___21
	call op_minus

_0_LT_
	movlw -1
	btfss POSTDEC0,7,0
	movlw 0
	movwf POSTINC0,0
	movwf INDF0,0
	return

_DT_
	call _1_GT_2
	call emit_MI_8

emit_MI_8
	call op_dup,0
	movf POSTDEC0,0,0
	swapf POSTINC0,1,0
	movf POSTDEC0,0,0
	movf POSTDEC0,0,0
	andlw 0xf
	call emit_MI_4
	movf POSTDEC0,0,0
	movf POSTDEC0,0,0
	andlw 0xf

emit_MI_4
	call nibble_MI_to_MI_hex
	goto emit

op_normalize
	movf POSTDEC0,0,0
	iorwf POSTDEC0,0,0

op_normalize_z
	movlw -1
	btfsc STATUS,2,0
	addlw 1
	movwf PREINC0,0
	movwf PREINC0,0
	return

pick
	call negate
	call depth
	call op_plus
	call _2_ST_
	movlw LOW(0x5c)
	movf POSTDEC0,1,0
	addwf POSTINC0,1,0
	movlw HIGH(0x5c)
	addwfc INDF0,1,0

op_fetch_tos
	btfsc INDF0,7,0
	goto flash_AT_
	btfsc INDF0,4,0
	goto eeprom_AT_
	movff POSTDEC0,FSR1H
	movff POSTDEC0,FSR1L
	movff POSTINC1,PREINC0
	movff INDF1,PREINC0
	return

table_MI_addr_EX_
	clrf TBLPTRU,0
	call _1_GT_2
	movf POSTDEC0,0,0
	movff POSTDEC0,TBLPTRH
	movf POSTDEC0,0,0
	movff POSTDEC0,TBLPTRL
	bcf EECON1,6,0
	return

normalize_MI_tos
	call op_dup,0
	call _0_LT_
	movf POSTDEC0,0,0
	iorwf POSTDEC0,0,0
	btfsc STATUS,2,0
	return
	btg math_MI_flags,0,0
	goto negate

flash_MI_addr_EX_
	bcf INDF0,7,0
	bsf EECON1,7,0
	bra table_MI_addr_EX_

_space
	movlw bl
	goto emit

test_MI_abs
	movlw LOW((_data___2+0x8000))
	movwf PREINC0,0
	movlw HIGH((_data___2+0x8000))
	movwf PREINC0,0
	movlw 16
	call type
	call op_dup,0
	call _DT_
	movlw LOW((_data___3+0x8000))
	movwf PREINC0,0
	movlw HIGH((_data___3+0x8000))
	movwf PREINC0,0
	movlw 2
	call type
	btfsc INDF0,7,0
	call negate
	call _DT_
	goto cr

test_MI_plus
	movlw LOW((_data___4+0x8000))
	movwf PREINC0,0
	movlw HIGH((_data___4+0x8000))
	movwf PREINC0,0
	movlw 33
	call type
	movlw LOW((0x1234+0x103))
	movwf PREINC0,0
	movlw HIGH((0x1234+0x103))
	movwf PREINC0,0
	call _DT_
	goto cr

test_MI_minus
	movlw LOW((_data___5+0x8000))
	movwf PREINC0,0
	movlw HIGH((_data___5+0x8000))
	movwf PREINC0,0
	movlw 33
	call type
	movlw LOW((0x1337-0x1234))
	movwf PREINC0,0
	movlw HIGH((0x1337-0x1234))
	movwf PREINC0,0
	call _DT_
	goto cr

test_MI_plus_EX_
	movlw LOW((_data___6+0x8000))
	movwf PREINC0,0
	movlw HIGH((_data___6+0x8000))
	movwf PREINC0,0
	movlw 34
	call type
	movlw LOW(0x103)
	movwf x,1
	movlw HIGH(0x103)
	movwf (x+1),1
	movlw LOW(0x1234)
	movwf PREINC0,0
	movlw HIGH(0x1234)
	movwf PREINC0,0
	clrf PREINC0,0
	movlw HIGH(x)
	movwf PREINC0,0
	call _PL__EX_
	movff x,PREINC0
	movff (x+1),PREINC0
	call _DT_
	goto cr

test_MI_minus_EX_
	movlw LOW((_data___7+0x8000))
	movwf PREINC0,0
	movlw HIGH((_data___7+0x8000))
	movwf PREINC0,0
	movlw 41
	call type
	movlw LOW(0x1337)
	movwf x,1
	movlw HIGH(0x1337)
	movwf (x+1),1
	movlw LOW(0x1234)
	movwf PREINC0,0
	movlw HIGH(0x1234)
	movwf PREINC0,0
	clrf PREINC0,0
	movlw HIGH(x)
	movwf PREINC0,0
	call _MI__EX_
	movff x,PREINC0
	movff (x+1),PREINC0
	call _DT_
	goto cr

cf
	call op_dup,0
	movf POSTDEC0,0,0
	iorwf POSTDEC0,0,0
	btfsc STATUS,2,0
	return
	movlw LOW((_data___8+0x8000))
	movwf PREINC0,0
	movlw HIGH((_data___8+0x8000))
	movwf PREINC0,0
	movlw 9
	goto type

ct
	call op_dup,0
	movf POSTDEC0,0,0
	iorwf POSTDEC0,0,0
	btfss STATUS,2,0
	return
	movlw LOW((_data___9+0x8000))
	movwf PREINC0,0
	movlw HIGH((_data___9+0x8000))
	movwf PREINC0,0
	movlw 9
	goto type

test_MI_bool
	movlw LOW((_data___10+0x8000))
	movwf PREINC0,0
	movlw HIGH((_data___10+0x8000))
	movwf PREINC0,0
	movlw 8
	call type
	movlw 1
	movwf PREINC0,0
	clrf PREINC0,0
	movlw 2
	movwf PREINC0,0
	clrf PREINC0,0
	call _LT_
	call ct
	call _DT_
	call cr
	movlw LOW((_data___11+0x8000))
	movwf PREINC0,0
	movlw HIGH((_data___11+0x8000))
	movwf PREINC0,0
	movlw 9
	call type
	movlw 1
	movwf PREINC0,0
	clrf PREINC0,0
	movlw 2
	movwf PREINC0,0
	clrf PREINC0,0
	call _LT__EQ_
	call ct
	call _DT_
	call cr
	movlw LOW((_data___12+0x8000))
	movwf PREINC0,0
	movlw HIGH((_data___12+0x8000))
	movwf PREINC0,0
	movlw 8
	call type
	movlw 1
	movwf PREINC0,0
	clrf PREINC0,0
	movlw 2
	movwf PREINC0,0
	clrf PREINC0,0
	call _GT_
	call cf
	call _DT_
	call cr
	movlw LOW((_data___13+0x8000))
	movwf PREINC0,0
	movlw HIGH((_data___13+0x8000))
	movwf PREINC0,0
	movlw 9
	call type
	movlw 1
	movwf PREINC0,0
	clrf PREINC0,0
	movlw 2
	movwf PREINC0,0
	clrf PREINC0,0
	call _GT__EQ_
	call cf
	call _DT_
	call cr
	movlw LOW((_data___14+0x8000))
	movwf PREINC0,0
	movlw HIGH((_data___14+0x8000))
	movwf PREINC0,0
	movlw 8
	call type
	movlw 1
	movwf PREINC0,0
	clrf PREINC0,0
	movlw 2
	movwf PREINC0,0
	clrf PREINC0,0
	call xor
	call op_zeroeq
	call cf
	call _DT_
	call cr
	movlw LOW((_data___15+0x8000))
	movwf PREINC0,0
	movlw HIGH((_data___15+0x8000))
	movwf PREINC0,0
	movlw 9
	call type
	movlw 1
	movwf PREINC0,0
	clrf PREINC0,0
	movlw 2
	movwf PREINC0,0
	clrf PREINC0,0
	call xor
	call op_normalize
	call ct
	call _DT_
	call cr
	movlw LOW((_data___16+0x8000))
	movwf PREINC0,0
	movlw HIGH((_data___16+0x8000))
	movwf PREINC0,0
	movlw 8
	call type
	movlw 1
	movwf PREINC0,0
	clrf PREINC0,0
	movlw 1
	movwf PREINC0,0
	clrf PREINC0,0
	call _LT_
	call cf
	call _DT_
	call cr
	movlw LOW((_data___17+0x8000))
	movwf PREINC0,0
	movlw HIGH((_data___17+0x8000))
	movwf PREINC0,0
	movlw 9
	call type
	movlw 1
	movwf PREINC0,0
	clrf PREINC0,0
	movlw 1
	movwf PREINC0,0
	clrf PREINC0,0
	call _LT__EQ_
	call ct
	call _DT_
	call cr
	movlw LOW((_data___18+0x8000))
	movwf PREINC0,0
	movlw HIGH((_data___18+0x8000))
	movwf PREINC0,0
	movlw 8
	call type
	movlw 1
	movwf PREINC0,0
	clrf PREINC0,0
	movlw 1
	movwf PREINC0,0
	clrf PREINC0,0
	call _GT_
	call cf
	call _DT_
	call cr
	movlw LOW((_data___19+0x8000))
	movwf PREINC0,0
	movlw HIGH((_data___19+0x8000))
	movwf PREINC0,0
	movlw 9
	call type
	movlw 1
	movwf PREINC0,0
	clrf PREINC0,0
	movlw 1
	movwf PREINC0,0
	clrf PREINC0,0
	call _GT__EQ_
	call ct
	call _DT_
	call cr
	movlw LOW((_data___20+0x8000))
	movwf PREINC0,0
	movlw HIGH((_data___20+0x8000))
	movwf PREINC0,0
	movlw 8
	call type
	movlw 1
	movwf PREINC0,0
	clrf PREINC0,0
	movlw 1
	movwf PREINC0,0
	clrf PREINC0,0
	call xor
	call op_zeroeq
	call ct
	call _DT_
	call cr
	movlw LOW((_data___21+0x8000))
	movwf PREINC0,0
	movlw HIGH((_data___21+0x8000))
	movwf PREINC0,0
	movlw 9
	call type
	movlw 1
	movwf PREINC0,0
	clrf PREINC0,0
	movlw 1
	movwf PREINC0,0
	clrf PREINC0,0
	call xor
	call op_normalize
	call cf
	call _DT_
	call cr
	movlw LOW((_data___22+0x8000))
	movwf PREINC0,0
	movlw HIGH((_data___22+0x8000))
	movwf PREINC0,0
	movlw 7
	call type
	movlw 1
	movwf PREINC0,0
	clrf PREINC0,0
	call op_zeroeq
	call cf
	call _DT_
	call cr
	movlw LOW((_data___23+0x8000))
	movwf PREINC0,0
	movlw HIGH((_data___23+0x8000))
	movwf PREINC0,0
	movlw 7
	call type
	movlw 1
	movwf PREINC0,0
	clrf PREINC0,0
	call _0_LT_
	call cf
	call _DT_
	call cr
	movlw LOW((_data___24+0x8000))
	movwf PREINC0,0
	movlw HIGH((_data___24+0x8000))
	movwf PREINC0,0
	movlw 7
	call type
	movlw 1
	movwf PREINC0,0
	clrf PREINC0,0
	call negate
	call _0_LT_
	call ct
	call _DT_
	call cr
	movlw LOW((_data___25+0x8000))
	movwf PREINC0,0
	movlw HIGH((_data___25+0x8000))
	movwf PREINC0,0
	movlw 8
	call type
	movlw 1
	movwf PREINC0,0
	clrf PREINC0,0
	call negate
	call _0_LT_
	call op_zeroeq
	call cf
	call _DT_
	call cr
	movlw LOW((_data___26+0x8000))
	movwf PREINC0,0
	movlw HIGH((_data___26+0x8000))
	movwf PREINC0,0
	movlw 8
	call type
	movlw 1
	movwf PREINC0,0
	clrf PREINC0,0
	call _0_LT_
	call op_zeroeq
	call ct
	call _DT_
	call cr
	movlw LOW((_data___27+0x8000))
	movwf PREINC0,0
	movlw HIGH((_data___27+0x8000))
	movwf PREINC0,0
	movlw 8
	call type
	movlw LOW(-1)
	movwf PREINC0,0
	movlw HIGH(-1)
	movwf PREINC0,0
	call op_zeroeq
	call cf
	call _DT_
	call cr
	movlw LOW((_data___28+0x8000))
	movwf PREINC0,0
	movlw HIGH((_data___28+0x8000))
	movwf PREINC0,0
	movlw 8
	call type
	movlw LOW(-1)
	movwf PREINC0,0
	movlw HIGH(-1)
	movwf PREINC0,0
	call _0_LT_
	call ct
	call _DT_
	call cr
	movlw LOW((_data___29+0x8000))
	movwf PREINC0,0
	movlw HIGH((_data___29+0x8000))
	movwf PREINC0,0
	movlw 8
	call type
	movlw LOW(-1)
	movwf PREINC0,0
	movlw HIGH(-1)
	movwf PREINC0,0
	call negate
	call _0_LT_
	call cf
	call _DT_
	call cr
	movlw LOW((_data___30+0x8000))
	movwf PREINC0,0
	movlw HIGH((_data___30+0x8000))
	movwf PREINC0,0
	movlw 9
	call type
	movlw LOW(-1)
	movwf PREINC0,0
	movlw HIGH(-1)
	movwf PREINC0,0
	call negate
	call _0_LT_
	call op_zeroeq
	call ct
	call _DT_
	call cr
	movlw LOW((_data___31+0x8000))
	movwf PREINC0,0
	movlw HIGH((_data___31+0x8000))
	movwf PREINC0,0
	movlw 9
	call type
	movlw LOW(-1)
	movwf PREINC0,0
	movlw HIGH(-1)
	movwf PREINC0,0
	call _0_LT_
	call op_zeroeq
	call cf
	call _DT_
	call cr
	movlw LOW((_data___32+0x8000))
	movwf PREINC0,0
	movlw HIGH((_data___32+0x8000))
	movwf PREINC0,0
	movlw 7
	call type
	clrf PREINC0,0
	clrf PREINC0,0
	call op_zeroeq
	call ct
	call _DT_
	call cr
	movlw LOW((_data___33+0x8000))
	movwf PREINC0,0
	movlw HIGH((_data___33+0x8000))
	movwf PREINC0,0
	movlw 7
	call type
	clrf PREINC0,0
	clrf PREINC0,0
	call _0_LT_
	call cf
	call _DT_
	call cr
	movlw LOW((_data___34+0x8000))
	movwf PREINC0,0
	movlw HIGH((_data___34+0x8000))
	movwf PREINC0,0
	movlw 7
	call type
	clrf PREINC0,0
	clrf PREINC0,0
	call negate
	call _0_LT_
	call cf
	call _DT_
	call cr
	movlw LOW((_data___35+0x8000))
	movwf PREINC0,0
	movlw HIGH((_data___35+0x8000))
	movwf PREINC0,0
	movlw 8
	call type
	clrf PREINC0,0
	clrf PREINC0,0
	call negate
	call _0_LT_
	call op_zeroeq
	call ct
	call _DT_
	call cr
	movlw LOW((_data___36+0x8000))
	movwf PREINC0,0
	movlw HIGH((_data___36+0x8000))
	movwf PREINC0,0
	movlw 8
	call type
	clrf PREINC0,0
	clrf PREINC0,0
	call _0_LT_
	call op_zeroeq
	call ct
	call _DT_
	goto cr

test_MI_swap
	movlw LOW((_data___37+0x8000))
	movwf PREINC0,0
	movlw HIGH((_data___37+0x8000))
	movwf PREINC0,0
	movlw 24
	call type
	movlw LOW(0x1234)
	movwf PREINC0,0
	movlw HIGH(0x1234)
	movwf PREINC0,0
	movlw LOW(0x5678)
	movwf PREINC0,0
	movlw HIGH(0x5678)
	movwf PREINC0,0
	call swap
	call _DT_
	call _space
	call _DT_
	goto cr

test_MI_2_ST_
	movlw LOW((_data___38+0x8000))
	movwf PREINC0,0
	movlw HIGH((_data___38+0x8000))
	movwf PREINC0,0
	movlw 10
	call type
	movlw LOW(0x1234)
	movwf PREINC0,0
	movlw HIGH(0x1234)
	movwf PREINC0,0
	call _2_ST_
	call _DT_
	goto cr

test_MI_2_SL_
	movlw LOW((_data___39+0x8000))
	movwf PREINC0,0
	movlw HIGH((_data___39+0x8000))
	movwf PREINC0,0
	movlw 10
	call type
	movlw LOW(0x2468)
	movwf PREINC0,0
	movlw HIGH(0x2468)
	movwf PREINC0,0
	rlcf INDF0,0,0
	rrcf POSTDEC0,1,0
	rrcf POSTINC0,1,0
	call _DT_
	call cr
	movlw LOW((_data___40+0x8000))
	movwf PREINC0,0
	movlw HIGH((_data___40+0x8000))
	movwf PREINC0,0
	movlw 10
	call type
	movlw LOW(0xfff0)
	movwf PREINC0,0
	movlw HIGH(0xfff0)
	movwf PREINC0,0
	rlcf INDF0,0,0
	rrcf POSTDEC0,1,0
	rrcf POSTINC0,1,0
	call _DT_
	goto cr

test_MI_mult
	movlw LOW((_data___41+0x8000))
	movwf PREINC0,0
	movlw HIGH((_data___41+0x8000))
	movwf PREINC0,0
	movlw 16
	call type
	movlw 0x75
	movwf PREINC0,0
	clrf PREINC0,0
	movlw 0x3a
	movwf PREINC0,0
	clrf PREINC0,0
	call _ST_
	call _DT_
	goto cr

test_MI_div
	movlw LOW((_data___42+0x8000))
	movwf PREINC0,0
	movlw HIGH((_data___42+0x8000))
	movwf PREINC0,0
	movlw 18
	call type
	movlw LOW(1000)
	movwf PREINC0,0
	movlw HIGH(1000)
	movwf PREINC0,0
	movlw LOW(355)
	movwf PREINC0,0
	movlw HIGH(355)
	movwf PREINC0,0
	movlw 113
	movwf PREINC0,0
	clrf PREINC0,0
	call _ST__SL_
	call _DT_
	goto cr

op_dup
	movlw -1
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	return

op_cfetch_tos
	btfsc INDF0,7,0
	goto flashc_AT_
	btfsc INDF0,4,0
	goto eepromc_AT_
	movff POSTDEC0,FSR1H
	movff POSTDEC0,FSR1L
	movff INDF1,PREINC0
	clrf PREINC0,0
	return

swap
	movff POSTDEC0,(temp_x1+1)
	movff POSTDEC0,temp_x1
	movff POSTDEC0,PREINC2
	movff POSTDEC0,PREINC2
	movff temp_x1,PREINC0
	movff (temp_x1+1),PREINC0
	movff POSTDEC2,PREINC0
	movff POSTDEC2,PREINC0
	return

op_plus
	movff POSTDEC0,temp_x1
	movf POSTDEC0,0,0
	movf POSTDEC0,1,0
	addwf POSTINC0,1,0
	movf temp_x1,0,0
	addwfc INDF0,1,0
	return

_PL__EX_
	movff POSTDEC0,FSR1H
	movff POSTDEC0,FSR1L
	movf POSTDEC0,0,0
	movf POSTINC0,0,0
	addwf POSTINC1,1,0
	movf POSTDEC0,0,0
	addwfc INDF1,1,0
	movf POSTDEC0,0,0
	return

op_minus
	movff POSTDEC0,temp_x1
	movf POSTDEC0,0,0
	movf POSTDEC0,1,0
	subwf POSTINC0,1,0
	movf temp_x1,0,0
	subwfb INDF0,1,0
	return

_MI__EX_
	movff POSTDEC0,FSR1H
	movff POSTDEC0,FSR1L
	movf POSTDEC0,0,0
	movf POSTINC0,0,0
	subwf POSTINC1,1,0
	movf POSTDEC0,0,0
	subwfb INDF1,1,0
	movf POSTDEC0,0,0
	return

xor
	movff POSTDEC0,temp_x1
	movf POSTDEC0,0,0
	movf POSTDEC0,1,0
	xorwf POSTINC0,1,0
	movf temp_x1,0,0
	xorwf INDF0,1,0
	return

_1_GT_2
	movf INDF0,0,0
	clrf INDF0,0
	movwf PREINC0,0
	clrf PREINC0,0
	return

_2dupxor_GT_w
	movf POSTDEC0,1,0
	movf POSTDEC0,1,0
	movf POSTINC0,0,0
	xorwf PREINC0,0,0
	return

_2_ST_
	bcf STATUS,0,0
	movf POSTDEC0,0,0
	rlcf POSTINC0,1,0
	rlcf INDF0,1,0
	return

_ST_
	movff POSTDEC0,(temp_x1+1)
	movff POSTDEC0,temp_x1
	movff POSTDEC0,(temp_x2+1)
	movff POSTDEC0,temp_x2
	movf temp_x1,0,0
	mulwf temp_x2,0
	movff PRODL,PREINC0
	movff PRODH,temp_x3
	mulwf (temp_x2+1),0
	movf PRODL,0,0
	addwf temp_x3,1,0
	movf (temp_x1+1),0,0
	mulwf temp_x2,0
	movf PRODL,0,0
	addwfc temp_x3,0,0
	movwf PREINC0,0
	return

depth
	movff (FSR0L+1),(temp_x1+1)
	movff FSR0L,temp_x1
	movff temp_x1,PREINC0
	movff (temp_x1+1),PREINC0
	movlw LOW((-0x5f))
	movf POSTDEC0,1,0
	addwf POSTINC0,1,0
	movlw HIGH((-0x5f))
	addwfc INDF0,1,0
	rlcf INDF0,0,0
	rrcf POSTDEC0,1,0
	rrcf POSTINC0,1,0
	return

mulw
	movf (temp_w+1),0,0
	mulwf (temp_l+1),0
	movff PRODH,(temp_e+1)
	movff PRODL,temp_e
	movf temp_w,0,0
	mulwf temp_l,0
	movff PRODH,temp_c3
	movff PRODL,temp_w
	mulwf (temp_l+1),0
	movf PRODL,0,0
	addwf temp_c3,1,0
	movf PRODH,0,0
	addwfc temp_e,1,0
	clrf WREG,0
	addwfc (temp_e+1),1,0
	movf (temp_w+1),0,0
	mulwf temp_l,0
	movf PRODL,0,0
	addwf temp_c3,0,0
	movwf (temp_w+1),0
	movf PRODH,0,0
	addwfc temp_e,1,0
	clrf WREG,0
	addwfc (temp_e+1),1,0
	return

div32
	clrf temp_c0,0
	clrf temp_c1,0
	clrf temp_c2,0
	movlw -32
	movwf temp_c3,0
div322
	bcf STATUS,0,0
	rlcf temp_w,1,0
	rlcf (temp_w+1),1,0
	rlcf temp_e,1,0
	rlcf (temp_e+1),1,0
	rlcf temp_c2,1,0
	rlcf temp_c1,1,0
	rlcf temp_c0,1,0
	movf temp_l,0,0
	subwf temp_c2,1,0
	movf (temp_l+1),0,0
	subwfb temp_c1,0,0
	bc div324
	tstfsz temp_c0,0
	bra div323
	movf temp_l,0,0
	addwf temp_c2,1,0
	bra div325
div323
	decf temp_c0,1,0
div324
	movwf temp_c1,0
	bsf temp_w,0,0
	btfss temp_c3,4,0
	bra div326
div325
	incfsz temp_c3,1,0
	bra div322
	movff temp_c2,temp_e
	movff temp_c1,(temp_e+1)
	return
div326
	movlw 0xff
	movwf (temp_w+1),0
	movwf temp_w,0
	movwf (temp_e+1),0
	movwf temp_e,0
	return

normalize_MI_tos_MI_2
	call normalize_MI_tos
	movff POSTDEC0,PREINC2
	movff POSTDEC0,PREINC2
	call normalize_MI_tos
	movff POSTDEC2,PREINC0
	movff POSTDEC2,PREINC0
	return

normalize_MI_tos_MI_3
	call normalize_MI_tos
	movff POSTDEC0,PREINC2
	movff POSTDEC0,PREINC2
	call normalize_MI_tos_MI_2
	movff POSTDEC2,PREINC0
	movff POSTDEC2,PREINC0
	return

flashc_AT_
	call flash_MI_addr_EX_
	tblrd*+
	movff TABLAT,PREINC0
	clrf PREINC0,0
	return

flash_AT_
	call flash_MI_addr_EX_
	tblrd*+
	movff TABLAT,PREINC0
	clrf PREINC0,0
	tblrd*+
	movff TABLAT,INDF0
	return

eeprom_MI_addr_EX_
	movwf EEADR,0
	bcf EECON1,7,0
	bcf EECON1,6,0
	return

eepromc_AT_
	call eeprom_MI_addr_EX_
	bsf EECON1,0,0
	movf EEDATA,0,0
	return

eeprom_AT_
	movf INDF0,0,0
	call eepromc_AT_
	movwf PREINC0,0
	clrf PREINC0,0
	call swap
	movf POSTDEC0,0,0
	infsnz POSTINC0,1,0
	incf INDF0,1,0
	movf POSTDEC0,0,0
	movf POSTDEC0,0,0
	call eepromc_AT_
	movwf PREINC0,0
	clrf PREINC0,0
	movf POSTDEC0,0,0
	movf POSTDEC0,0,0
	movwf INDF0,0
	return

nibble_MI_to_MI_hex
	addlw 0xf6
	btfsc STATUS,0,0
	addlw 7
	addlw 0x3a
	return

_DT_s
	movlw 60
	call emit
	call depth
	call op_dup,0
	call _DT_
	movlw 62
	call emit
	call op_dup,0
	movf POSTDEC0,0,0
	iorwf POSTDEC0,0,0
	bz _lbl___95
	call op_dup,0
	movlw 8
	movwf PREINC0,0
	clrf PREINC0,0
	call _GT_
	movf POSTDEC0,0,0
	iorwf POSTDEC0,0,0
	bz _lbl___96
	movf POSTDEC0,0,0
	movf POSTDEC0,0,0
	movlw LOW((_data_+0x8000))
	movwf PREINC0,0
	movlw HIGH((_data_+0x8000))
	movwf PREINC0,0
	movlw 4
	call type
	movlw 8
	movwf PREINC0,0
	clrf PREINC0,0
_lbl___96
	movf POSTDEC0,0,0
	movf POSTDEC0,0,0
	movwf PREINC2,0
	bz _lbl___97
_lbl___99
	call _space
	movff INDF2,PREINC0
	clrf PREINC0,0
	movlw LOW((-1))
	movf POSTDEC0,1,0
	addwf POSTINC0,1,0
	movlw HIGH((-1))
	addwfc INDF0,1,0
	call pick
	call _DT_
	decfsz INDF2,1,0
	bra _lbl___99
_lbl___97
	movf POSTDEC2,1,0
	return
_lbl___95
	movf POSTDEC0,0,0
	movf POSTDEC0,0,0
	return

;---------------------------------------------------------
; Section: memory
;---------------------------------------------------------

temp_x1 equ 0x0

temp_x2 equ 0x2

temp_x3 equ 0x4

temp_w equ 0x7

temp_l equ 0x9

temp_e equ 0xb

temp_c0 equ 0xd

temp_c1 equ 0xe

temp_c2 equ 0xf

temp_c3 equ 0x10

math_MI_flags equ 0x11

x equ 0x100

;---------------------------------------------------------
; Section: static data
;---------------------------------------------------------

_data_
	db 32,46,46,46

_data___1
	db 83,116,97,114,116,105,110,103
	db 13,10

_data___2
	db 84,101,115,116,105,110,103,32
	db 97,98,115,32,102,111,114,32

_data___3
	db 58,32

_data___4
	db 84,101,115,116,105,110,103,32
	db 48,120,49,48,51,32,43,32
	db 48,120,49,50,51,52,32,40
	db 48,120,49,51,51,55,41,58
	db 32

_data___5
	db 84,101,115,116,105,110,103,32
	db 48,120,49,51,51,55,32,45
	db 32,48,120,49,50,51,52,32
	db 40,48,120,49,48,51,41,58
	db 32

_data___6
	db 65,100,100,105,110,103,32,48
	db 120,49,50,51,52,32,116,111
	db 32,48,120,49,48,51,32,105
	db 110,32,109,101,109,111,114,121
	db 58,32

_data___7
	db 83,117,98,116,114,97,116,105
	db 110,103,32,48,120,49,50,51
	db 52,32,102,114,111,109,32,48
	db 120,49,51,51,55,32,105,110
	db 32,109,101,109,111,114,121,58
	db 32

_data___8
	db 32,45,45,32,69,82,82,79
	db 82

_data___9
	db 32,45,45,32,69,82,82,79
	db 82

_data___10
	db 49,32,50,32,60,32,58,32

_data___11
	db 49,32,50,32,60,61,32,58
	db 32

_data___12
	db 49,32,50,32,62,32,58,32

_data___13
	db 49,32,50,32,62,61,32,58
	db 32

_data___14
	db 49,32,50,32,61,32,58,32

_data___15
	db 49,32,50,32,60,62,32,58
	db 32

_data___16
	db 49,32,49,32,60,32,58,32

_data___17
	db 49,32,49,32,60,61,32,58
	db 32

_data___18
	db 49,32,49,32,62,32,58,32

_data___19
	db 49,32,49,32,62,61,32,58
	db 32

_data___20
	db 49,32,49,32,61,32,58,32

_data___21
	db 49,32,49,32,60,62,32,58
	db 32

_data___22
	db 49,32,48,61,32,58,32

_data___23
	db 49,32,48,60,32,58,32

_data___24
	db 49,32,48,62,32,58,32

_data___25
	db 49,32,48,60,61,32,58,32

_data___26
	db 49,32,48,62,61,32,58,32

_data___27
	db 45,49,32,48,61,32,58,32

_data___28
	db 45,49,32,48,60,32,58,32

_data___29
	db 45,49,32,48,62,32,58,32

_data___30
	db 45,49,32,48,60,61,32,58
	db 32

_data___31
	db 45,49,32,48,62,61,32,58
	db 32

_data___32
	db 48,32,48,61,32,58,32

_data___33
	db 48,32,48,60,32,58,32

_data___34
	db 48,32,48,62,32,58,32

_data___35
	db 48,32,48,60,61,32,58,32

_data___36
	db 48,32,48,62,61,32,58,32

_data___37
	db 83,104,111,117,108,100,32,112
	db 114,105,110,116,32,49,50,51
	db 52,32,53,54,55,56,58,32

_data___38
	db 49,50,51,52,32,50,42,32
	db 58,32

_data___39
	db 50,52,54,56,32,50,47,32
	db 58,32

_data___40
	db 70,70,70,48,32,50,47,32
	db 58,32

_data___41
	db 55,53,32,51,65,32,42,32
	db 40,49,65,56,50,41,58,32

_data___42
	db 49,48,48,48,32,80,73,32
	db 42,32,40,48,67,52,53,41
	db 58,32

END
