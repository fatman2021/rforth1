	processor pic18f248
	radix dec
	org 0x2000
	goto init_runtime

;---------------------------------------------------------
; Section: constants
;---------------------------------------------------------

; TBLPTRU: defined at lib/sfrnames.fs:13
TBLPTRU equ 0xff8

; TBLPTRH: defined at lib/sfrnames.fs:14
TBLPTRH equ 0xff7

; TBLPTRL: defined at lib/sfrnames.fs:15
TBLPTRL equ 0xff6

; TABLAT: defined at lib/sfrnames.fs:16
TABLAT equ 0xff5

; INDF0: defined at lib/sfrnames.fs:23
INDF0 equ 0xfef

; POSTINC0: defined at lib/sfrnames.fs:24
POSTINC0 equ 0xfee

; POSTDEC0: defined at lib/sfrnames.fs:25
POSTDEC0 equ 0xfed

; PREINC0: defined at lib/sfrnames.fs:26
PREINC0 equ 0xfec

; PLUSW0: defined at lib/sfrnames.fs:27
PLUSW0 equ 0xfeb

; FSR0H: defined at lib/sfrnames.fs:28
FSR0H equ 0xfea

; FSR0L: defined at lib/sfrnames.fs:29
FSR0L equ 0xfe9

; WREG: defined at lib/sfrnames.fs:30
WREG equ 0xfe8

; INDF1: defined at lib/sfrnames.fs:31
INDF1 equ 0xfe7

; POSTINC1: defined at lib/sfrnames.fs:32
POSTINC1 equ 0xfe6

; FSR1H: defined at lib/sfrnames.fs:36
FSR1H equ 0xfe2

; FSR1L: defined at lib/sfrnames.fs:37
FSR1L equ 0xfe1

; INDF2: defined at lib/sfrnames.fs:39
INDF2 equ 0xfdf

; POSTINC2: defined at lib/sfrnames.fs:40
POSTINC2 equ 0xfde

; POSTDEC2: defined at lib/sfrnames.fs:41
POSTDEC2 equ 0xfdd

; PREINC2: defined at lib/sfrnames.fs:42
PREINC2 equ 0xfdc

; FSR2H: defined at lib/sfrnames.fs:44
FSR2H equ 0xfda

; FSR2L: defined at lib/sfrnames.fs:45
FSR2L equ 0xfd9

; STATUS: defined at lib/sfrnames.fs:46
STATUS equ 0xfd8

; TXREG: defined at lib/sfrnames.fs:86
TXREG equ 0xfad

; EEADR: defined at lib/sfrnames.fs:89
EEADR equ 0xfa9

; EEDATA: defined at lib/sfrnames.fs:90
EEDATA equ 0xfa8

; EECON2: defined at lib/sfrnames.fs:91
EECON2 equ 0xfa7

; EECON1: defined at lib/sfrnames.fs:92
EECON1 equ 0xfa6

; PIR2: defined at lib/sfrnames.fs:97
PIR2 equ 0xfa1

; PIR1: defined at lib/sfrnames.fs:100
PIR1 equ 0xf9e

; TRISB: defined at lib/sfrnames.fs:105
TRISB equ 0xf93

; CIOCON: defined at lib/sfrnames.fs:120
CIOCON equ 0xf73

; BRGCON3: defined at lib/sfrnames.fs:121
BRGCON3 equ 0xf72

; BRGCON2: defined at lib/sfrnames.fs:122
BRGCON2 equ 0xf71

; BRGCON1: defined at lib/sfrnames.fs:123
BRGCON1 equ 0xf70

; CANCON: defined at lib/sfrnames.fs:124
CANCON equ 0xf6f

; CANSTAT: defined at lib/sfrnames.fs:125
CANSTAT equ 0xf6e

; RXB0D0: defined at lib/sfrnames.fs:133
RXB0D0 equ 0xf66

; RXB0DLC: defined at lib/sfrnames.fs:134
RXB0DLC equ 0xf65

; RXB0SIDL: defined at lib/sfrnames.fs:137
RXB0SIDL equ 0xf62

; RXB0SIDH: defined at lib/sfrnames.fs:138
RXB0SIDH equ 0xf61

; RXB0CON: defined at lib/sfrnames.fs:139
RXB0CON equ 0xf60

; RXB1D0: defined at lib/sfrnames.fs:148
RXB1D0 equ 0xf56

; RXB1DLC: defined at lib/sfrnames.fs:149
RXB1DLC equ 0xf55

; RXB1SIDL: defined at lib/sfrnames.fs:152
RXB1SIDL equ 0xf52

; RXB1SIDH: defined at lib/sfrnames.fs:153
RXB1SIDH equ 0xf51

; RXB1CON: defined at lib/sfrnames.fs:154
RXB1CON equ 0xf50

; TXB0D0: defined at lib/sfrnames.fs:163
TXB0D0 equ 0xf46

; TXB0DLC: defined at lib/sfrnames.fs:164
TXB0DLC equ 0xf45

; TXB0SIDL: defined at lib/sfrnames.fs:167
TXB0SIDL equ 0xf42

; TXB0SIDH: defined at lib/sfrnames.fs:168
TXB0SIDH equ 0xf41

; TXB0CON: defined at lib/sfrnames.fs:169
TXB0CON equ 0xf40

; TXB1CON: defined at lib/sfrnames.fs:184
TXB1CON equ 0xf30

; TXB2CON: defined at lib/sfrnames.fs:199
TXB2CON equ 0xf20

; RXM0SIDL: defined at lib/sfrnames.fs:206
RXM0SIDL equ 0xf19

; RXM0SIDH: defined at lib/sfrnames.fs:207
RXM0SIDH equ 0xf18

; RXF0SIDL: defined at lib/sfrnames.fs:230
RXF0SIDL equ 0xf01

; RXF0SIDH: defined at lib/sfrnames.fs:231
RXF0SIDH equ 0xf00

; bl: defined at lib/strings.fs:5
bl equ 0x20

;---------------------------------------------------------
; Section: code
;---------------------------------------------------------

; can-prepare-buffer: defined at lib/canlib.fs:82
can_MI_prepare_MI_buffer
	call can_MI_choose_MI_buffer
	movff can_MI_msg_MI_length,PREINC0
	clrf PREINC0,0
	movlw LOW(TXB0DLC)
	movwf PREINC0,0
	movlw HIGH(TXB0DLC)
	movwf PREINC0,0
	call tx0_GT_txn
	call op_cstore
	movff can_MI_msg_MI_length,PREINC0
	clrf PREINC0,0
	movf POSTDEC0,0,0
	iorwf POSTDEC0,0,0
	bz _lbl___151
	movlw can_MI_msg
	movwf PREINC0,0
	clrf PREINC0,0
	movlw LOW(TXB0D0)
	movwf PREINC0,0
	movlw HIGH(TXB0D0)
	movwf PREINC0,0
	call tx0_GT_txn
	movf can_MI_msg_MI_length,0,0
	call memcpy
_lbl___151
	movff can_MI_arbitration,PREINC0
	movff (can_MI_arbitration+1),PREINC0
	call _5_LT__LT_
	call _1_GT_2
	movlw LOW(TXB0SIDH)
	movwf PREINC0,0
	movlw HIGH(TXB0SIDH)
	movwf PREINC0,0
	call tx0_GT_txn
	call op_cstore
	movlw LOW(TXB0SIDL)
	movwf PREINC0,0
	movlw HIGH(TXB0SIDL)
	movwf PREINC0,0
	call tx0_GT_txn

; op_cstore: defined at lib/primitives.fs:171
op_cstore
	btfsc INDF0,4,0
	goto eepromc_EX_
	movff POSTDEC0,FSR1H
	movff POSTDEC0,FSR1L
	movf POSTDEC0,0,0
	movff POSTDEC0,INDF1
	return

; can-init: defined at lib/canlib.fs:130
can_MI_init
	bsf TRISB,3,0
	bcf TRISB,2,0
	call can_MI_config
	movlw 0x9
	movwf BRGCON1,0
	movlw 0x90
	movwf BRGCON2,0
	movlw 0x2
	movwf BRGCON3,0
	movlw 0x40
	movwf CIOCON,0
	call can_MI_disable_MI_all_MI_filters

; can-normal: defined at lib/canlib.fs:112
can_MI_normal
	clrf PREINC0,0
	clrf PREINC0,0

; can-mode: defined at lib/canlib.fs:98
can_MI_mode
	call _5_LT__LT_
	call dup
	movff CANCON,PREINC0
	clrf PREINC0,0
	movlw 0x1f
	movwf PREINC0,0
	clrf PREINC0,0
	call and
	call or
	movf POSTDEC0,0,0
	movff POSTDEC0,CANCON
_lbl___158
	call dup
	movff CANSTAT,PREINC0
	clrf PREINC0,0
	movlw 0xe0
	movwf PREINC0,0
	clrf PREINC0,0
	call and
	call xor
	call op_zeroeq
	movf POSTDEC0,0,0
	iorwf POSTDEC0,0,0
	bz _lbl___158
	movf POSTDEC0,1,0
	movf POSTDEC0,1,0
	return

; init_runtime: defined at lib/primitives.fs:3
init_runtime
	movlb 1
	movlw 0x5f
	movwf FSR0L,0
	clrf FSR0H,0
	movlw 0xbf
	movwf FSR2L,0
	clrf FSR2H,0

; main: defined at tests/test-can.fs:3
main
	call can_MI_init
	call can_MI_config
	movlw LOW(0x378)
	movwf PREINC0,0
	movlw HIGH(0x378)
	movwf PREINC0,0
	movlw 0
	call can_MI_set_MI_filter
	movlw LOW(0x176)
	movwf PREINC0,0
	movlw HIGH(0x176)
	movwf PREINC0,0
	movlw 1
	call can_MI_set_MI_filter
	call can_MI_loopback
	call _DT_s
	call cr
	movlw LOW((_data___1+0x8000))
	movwf PREINC0,0
	movlw HIGH((_data___1+0x8000))
	movwf PREINC0,0
	movlw 43
	movwf PREINC0,0
	clrf PREINC0,0
	call type
	call cr
	movlw LOW(0x1234)
	movwf PREINC0,0
	movlw HIGH(0x1234)
	movwf PREINC0,0
	movlw LOW(0x378)
	movwf PREINC0,0
	movlw HIGH(0x378)
	movwf PREINC0,0
	call can_MI_emit_MI_1
	call _DT_s
	call cr
	movlw LOW((_data___2+0x8000))
	movwf PREINC0,0
	movlw HIGH((_data___2+0x8000))
	movwf PREINC0,0
	movlw 17
	movwf PREINC0,0
	clrf PREINC0,0
	call type
	call cr
	call can_MI_receive_MI_1
	call _DT_s
	call cr
	movlw LOW((_data___3+0x8000))
	movwf PREINC0,0
	movlw HIGH((_data___3+0x8000))
	movwf PREINC0,0
	movlw 13
	movwf PREINC0,0
	clrf PREINC0,0
	call type
	call _DT_
	call cr
	movlw LOW((_data___4+0x8000))
	movwf PREINC0,0
	movlw HIGH((_data___4+0x8000))
	movwf PREINC0,0
	movlw 13
	movwf PREINC0,0
	clrf PREINC0,0
	call type
	movlw -1
	btfss can_MI_msg_MI_flags,0,0
	addlw 1
	movwf PREINC0,0
	movwf PREINC0,0
	call _DT_
	call cr
	movlw LOW((_data___5+0x8000))
	movwf PREINC0,0
	movlw HIGH((_data___5+0x8000))
	movwf PREINC0,0
	movlw 13
	movwf PREINC0,0
	clrf PREINC0,0
	call type
	call _DT_
	call cr
	movlw LOW((_data___6+0x8000))
	movwf PREINC0,0
	movlw HIGH((_data___6+0x8000))
	movwf PREINC0,0
	movlw 34
	movwf PREINC0,0
	clrf PREINC0,0
	call type
	call cr
	movlw LOW(0x176)
	movwf PREINC0,0
	movlw HIGH(0x176)
	movwf PREINC0,0
	call can_MI_emit_MI_rtr
	call _DT_s
	call cr
	call can_MI_receive
	call _DT_s
	call cr
	movlw LOW((_data___7+0x8000))
	movwf PREINC0,0
	movlw HIGH((_data___7+0x8000))
	movwf PREINC0,0
	movlw 13
	movwf PREINC0,0
	clrf PREINC0,0
	call type
	movff can_MI_arbitration,PREINC0
	movff (can_MI_arbitration+1),PREINC0
	call _DT_
	call cr
	movlw LOW((_data___8+0x8000))
	movwf PREINC0,0
	movlw HIGH((_data___8+0x8000))
	movwf PREINC0,0
	movlw 13
	movwf PREINC0,0
	clrf PREINC0,0
	call type
	movlw -1
	btfss can_MI_msg_MI_flags,0,0
	addlw 1
	movwf PREINC0,0
	movwf PREINC0,0
	call _DT_

; cr: defined at lib/strings.fs:8
cr
	movlw 0xa
	movwf PREINC0,0
	clrf PREINC0,0
	call emit
	movlw 0xd
	movwf PREINC0,0
	clrf PREINC0,0

; emit: defined at lib/tty-rs232.fs:4
emit
	btfss PIR1,4,0
	bra emit
	movf POSTDEC0,0,0
	movff POSTDEC0,TXREG
	return

; can-emit-1: defined at lib/canlib.fs:154
can_MI_emit_MI_1
	movff POSTDEC0,(can_MI_arbitration+1)
	movff POSTDEC0,can_MI_arbitration
	movff POSTDEC0,(can_MI_msg_MI_0+1)
	movff POSTDEC0,can_MI_msg_MI_0
	movlw 2
	movwf can_MI_msg_MI_length,0

; can-transmit: defined at lib/canlib.fs:94
can_MI_transmit
	call can_MI_prepare_MI_buffer
	call can_MI_clr_MI_rtr

; can-transmit-buffer: defined at lib/canlib.fs:89
can_MI_transmit_MI_buffer
	movlw LOW(TXB0CON)
	movwf PREINC0,0
	movlw HIGH(TXB0CON)
	movwf PREINC0,0
	call tx0_GT_txn
	movff POSTDEC0,FSR1H
	movff POSTDEC0,FSR1L
	bsf INDF1,3,0
	return

; >: defined at lib/arithmetic.fs:183
_GT_
	call swap

; <: defined at lib/arithmetic.fs:167
_LT_
	call _2dupxor_GT_w
	btfss WREG,7,0
	bra _lbl___22
	movf POSTDEC0,1,0
	movf POSTDEC0,1,0
	goto _0_LT_
_lbl___22
	call op_minus

; 0<: defined at lib/arithmetic.fs:140
_0_LT_
	movlw -1
	btfss POSTDEC0,7,0
	movlw 0
	movwf POSTINC0,0
	movwf INDF0,0
	return

; .: defined at lib/strings.fs:25
_DT_
	call _1_GT_2
	call emit_MI_8

; emit-8: defined at lib/strings.fs:24
emit_MI_8
	call dup
	movf POSTDEC0,0,0
	swapf POSTINC0,1,0
	movlw 0xf
	movwf PREINC0,0
	clrf PREINC0,0
	call and
	call emit_MI_4
	movlw 0xf
	movwf PREINC0,0
	clrf PREINC0,0
	call and

; emit-4: defined at lib/strings.fs:23
emit_MI_4
	call nibble_MI_to_MI_hex
	movwf PREINC0,0
	clrf PREINC0,0
	goto emit

; 5<<: defined at lib/canlib.fs:21
_5_LT__LT_
	call _2_ST_

; 16*: defined at lib/canlib.fs:20
_16_ST_
	call _4_ST_

; 4*: defined at lib/canlib.fs:19
_4_ST_
	call _2_ST_

; 2*: defined at lib/arithmetic.fs:196
_2_ST_
	bcf STATUS,0,0
	movf POSTDEC0,0,0
	rlcf POSTINC0,1,0
	rlcf INDF0,1,0
	return

; 5>>: defined at lib/canlib.fs:25
_5_GT__GT_
	rlcf INDF0,0,0
	rrcf POSTDEC0,1,0
	rrcf POSTINC0,1,0

; 16/: defined at lib/canlib.fs:24
_16_SL_
	call _4_SL_

; 4/: defined at lib/canlib.fs:23
_4_SL_
	rlcf INDF0,0,0
	rrcf POSTDEC0,1,0
	rrcf POSTINC0,1,0
	rlcf INDF0,0,0
	rrcf POSTDEC0,1,0
	rrcf POSTINC0,1,0
	return

; can-choose-buffer: defined at lib/canlib.fs:72
can_MI_choose_MI_buffer
	lfsr 1,TXB0CON
	btfsc INDF1,3,0
	bra _lbl___146
	clrf PREINC0,0
	clrf PREINC0,0
	goto can_MI_set_MI_buffer
_lbl___146
	btfsc can_MI_flags,0,0
	bra can_MI_choose_MI_buffer
	lfsr 1,TXB1CON
	btfsc INDF1,3,0
	bra _lbl___148
	movlw 1
	movwf PREINC0,0
	clrf PREINC0,0
	goto can_MI_set_MI_buffer
_lbl___148
	lfsr 1,TXB2CON
	btfsc INDF1,3,0
	bra can_MI_choose_MI_buffer
	movlw 2
	movwf PREINC0,0
	clrf PREINC0,0

; can-set-buffer: defined at lib/canlib.fs:62
can_MI_set_MI_buffer
	movf POSTDEC0,0,0
	movff POSTDEC0,can_MI_buffer

; compute-can-offset: defined at lib/canlib.fs:56
compute_MI_can_MI_offset
	movff can_MI_buffer,PREINC0
	clrf PREINC0,0
	call _16_ST_
	movf POSTDEC0,0,0
	movff POSTDEC0,can_MI_offset
	return

; can-emit-rtr: defined at lib/canlib.fs:140
can_MI_emit_MI_rtr
	movff POSTDEC0,(can_MI_arbitration+1)
	movff POSTDEC0,can_MI_arbitration
	clrf can_MI_msg_MI_length,0

; can-transmit-rtr: defined at lib/canlib.fs:96
can_MI_transmit_MI_rtr
	call can_MI_prepare_MI_buffer
	call can_MI_set_MI_rtr
	goto can_MI_transmit_MI_buffer

; op_zeroeq: defined at lib/primitives.fs:70
op_zeroeq
	movf POSTDEC0,0,0
	iorwf POSTDEC0,0,0

; op_zeroeq_z: defined at lib/primitives.fs:61
op_zeroeq_z
	movlw -1
	btfss STATUS,2,0
	addlw 1
	movwf PREINC0,0
	movwf PREINC0,0
	return

; pick: defined at lib/arithmetic.fs:238
pick
	call negate
	call depth
	call op_plus
	call _2_ST_
	movlw LOW(0x5c)
	movf POSTDEC0,1,0
	addwf POSTINC0,1,0
	movlw HIGH(0x5c)
	addwfc INDF0,1,0

; op_fetch_tos: defined at lib/primitives.fs:183
op_fetch_tos
	btfsc INDF0,7,0
	goto flash_AT_
	btfsc INDF0,4,0
	goto eeprom_AT_
	movff POSTDEC0,FSR1H
	movff POSTDEC0,FSR1L
	movff POSTINC1,PREINC0
	movff INDF1,PREINC0
	return

; m0>mn: defined at lib/canlib.fs:60
m0_GT_mn
	movff can_MI_buffer,PREINC0
	clrf PREINC0,0
	call _4_ST_

; op_plus: defined at lib/arithmetic.fs:6
op_plus
	movff POSTDEC0,temp_x1
	movf POSTDEC0,0,0
	movf POSTDEC0,1,0
	addwf POSTINC0,1,0
	movf temp_x1,0,0
	addwfc INDF0,1,0
	return

; tx0>txn: defined at lib/canlib.fs:58
tx0_GT_txn
	movff can_MI_offset,PREINC0
	clrf PREINC0,0

; op_minus: defined at lib/arithmetic.fs:39
op_minus
	movff POSTDEC0,temp_x1
	movf POSTDEC0,0,0
	movf POSTDEC0,1,0
	subwf POSTINC0,1,0
	movf temp_x1,0,0
	subwfb INDF0,1,0
	return

; table-addr!: defined at lib/tables.fs:1
table_MI_addr_EX_
	clrf TBLPTRU,0
	call _1_GT_2
	movf POSTDEC0,0,0
	movff POSTDEC0,TBLPTRH
	movf POSTDEC0,0,0
	movff POSTDEC0,TBLPTRL
	bcf EECON1,6,0
	return

; can-receive: defined at lib/canlib.fs:49
can_MI_receive
_lbl___130
	movlw -1
	btfss RXB0CON,7,0
	addlw 1
	movwf PREINC0,0
	movwf PREINC0,0
	movf POSTDEC0,0,0
	iorwf POSTDEC0,0,0
	btfss STATUS,2,0
	goto can_MI_receive_MI_buffer0
	lfsr 1,RXB1CON
	movlw -1
	btfss INDF1,7,0
	addlw 1
	movwf PREINC0,0
	movwf PREINC0,0
	movf POSTDEC0,0,0
	iorwf POSTDEC0,0,0
	bz _lbl___130

; can-receive-buffer1: defined at lib/canlib.fs:40
can_MI_receive_MI_buffer1
	movff RXB1DLC,PREINC0
	clrf PREINC0,0
	movlw 0xf
	movwf PREINC0,0
	clrf PREINC0,0
	call and
	call dup
	movf POSTDEC0,0,0
	movff POSTDEC0,can_MI_msg_MI_length
	movf POSTDEC0,0,0
	iorwf POSTDEC0,0,0
	bz _lbl___127
	movlw LOW(RXB1D0)
	movwf PREINC0,0
	movlw HIGH(RXB1D0)
	movwf PREINC0,0
	movlw can_MI_msg
	movwf PREINC0,0
	clrf PREINC0,0
	movf can_MI_msg_MI_length,0,0
	call memcpy
_lbl___127
	clrf can_MI_msg_MI_flags,0
	lfsr 1,RXB1DLC
	btfsc INDF1,6,0
	bsf can_MI_msg_MI_flags,0,0
	movff RXB1SIDL,PREINC0
	movff RXB1SIDH,PREINC0
	call _5_GT__GT_
	movff POSTDEC0,(can_MI_arbitration+1)
	movff POSTDEC0,can_MI_arbitration
	lfsr 1,RXB1CON
	bcf INDF1,7,0
	return

; flash-addr!: defined at lib/tables.fs:3
flash_MI_addr_EX_
	bcf INDF0,7,0
	bsf EECON1,7,0
	bra table_MI_addr_EX_

; space: defined at lib/strings.fs:7
_space
	movlw bl
	movwf PREINC0,0
	clrf PREINC0,0
	goto emit

; can-config: defined at lib/canlib.fs:111
can_MI_config
	movlw 0x4
	movwf PREINC0,0
	clrf PREINC0,0
	goto can_MI_mode

; can-loopback: defined at lib/canlib.fs:113
can_MI_loopback
	movlw 0x2
	movwf PREINC0,0
	clrf PREINC0,0
	goto can_MI_mode

; can-set-filter: defined at lib/canlib.fs:120
can_MI_set_MI_filter
	movwf can_MI_buffer,0
	call _5_LT__LT_
	call _1_GT_2
	clrf PREINC0,0
	movlw HIGH(RXF0SIDH)
	movwf PREINC0,0
	call m0_GT_mn
	call op_cstore
	movlw LOW(RXF0SIDL)
	movwf PREINC0,0
	movlw HIGH(RXF0SIDL)
	movwf PREINC0,0
	call m0_GT_mn
	goto op_cstore

; can-set-mask: defined at lib/canlib.fs:123
can_MI_set_MI_mask
	movwf can_MI_buffer,0
	call _5_LT__LT_
	call _1_GT_2
	movlw LOW(RXM0SIDH)
	movwf PREINC0,0
	movlw HIGH(RXM0SIDH)
	movwf PREINC0,0
	call m0_GT_mn
	call op_cstore
	movlw LOW(RXM0SIDL)
	movwf PREINC0,0
	movlw HIGH(RXM0SIDL)
	movwf PREINC0,0
	call m0_GT_mn
	goto op_cstore

; dup: defined at lib/primitives.fs:29
dup
	movlw -1
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	return

; op_cfetch_tos: defined at lib/primitives.fs:197
op_cfetch_tos
	btfsc INDF0,7,0
	goto flashc_AT_
	btfsc INDF0,4,0
	goto eepromc_AT_
	movff POSTDEC0,FSR1H
	movff POSTDEC0,FSR1L
	movff INDF1,PREINC0
	clrf PREINC0,0
	return

; swap: defined at lib/primitives.fs:241
swap
	movff POSTDEC0,(temp_x1+1)
	movff POSTDEC0,temp_x1
	movff POSTDEC0,PREINC2
	movff POSTDEC0,PREINC2
	movff temp_x1,PREINC0
	movff (temp_x1+1),PREINC0
	movff POSTDEC2,PREINC0
	movff POSTDEC2,PREINC0
	return

; 2drop: defined at lib/primitives.fs:243
_2drop
	movf POSTDEC0,1,0
	movf POSTDEC0,1,0
	movf POSTDEC0,1,0
	movf POSTDEC0,1,0
	return

; and: defined at lib/arithmetic.fs:63
and
	movff POSTDEC0,temp_x1
	movf POSTDEC0,0,0
	movf POSTDEC0,1,0
	andwf POSTINC0,1,0
	movf temp_x1,0,0
	andwf INDF0,1,0
	return

; or: defined at lib/arithmetic.fs:75
or
	movff POSTDEC0,temp_x1
	movf POSTDEC0,0,0
	movf POSTDEC0,1,0
	iorwf POSTINC0,1,0
	movf temp_x1,0,0
	iorwf INDF0,1,0
	return

; xor: defined at lib/arithmetic.fs:87
xor
	movff POSTDEC0,temp_x1
	movf POSTDEC0,0,0
	movf POSTDEC0,1,0
	xorwf POSTINC0,1,0
	movf temp_x1,0,0
	xorwf INDF0,1,0
	return

; 1>2: defined at lib/arithmetic.fs:106
_1_GT_2
	movf INDF0,0,0
	clrf INDF0,0
	movwf PREINC0,0
	clrf PREINC0,0
	return

; negate: defined at lib/arithmetic.fs:132
negate
	comf POSTDEC0,1,0
	negf POSTINC0,0
	movlw 0
	addwfc INDF0,1,0
	return

; 2dupxor>w: defined at lib/arithmetic.fs:159
_2dupxor_GT_w
	movf POSTDEC0,1,0
	movf POSTDEC0,1,0
	movf POSTINC0,0,0
	xorwf PREINC0,0,0
	return

; depth: defined at lib/arithmetic.fs:236
depth
	movff (FSR0L+1),(temp_x1+1)
	movff FSR0L,temp_x1
	movff temp_x1,PREINC0
	movff (temp_x1+1),PREINC0
	movlw LOW((-0x5f))
	movf POSTDEC0,1,0
	addwf POSTINC0,1,0
	movlw HIGH((-0x5f))
	addwfc INDF0,1,0
	rlcf INDF0,0,0
	rrcf POSTDEC0,1,0
	rrcf POSTINC0,1,0
	return

; flashc@: defined at lib/tables.fs:14
flashc_AT_
	call flash_MI_addr_EX_
	tblrd*+
	movff TABLAT,PREINC0
	clrf PREINC0,0
	return

; flash@: defined at lib/tables.fs:15
flash_AT_
	call flash_MI_addr_EX_
	tblrd*+
	movff TABLAT,PREINC0
	clrf PREINC0,0
	tblrd*+
	movff TABLAT,PREINC0
	clrf PREINC0,0
	movf POSTDEC0,0,0
	movf POSTDEC0,0,0
	movwf INDF0,0
	return

; eeprom-addr!: defined at lib/tables.fs:17
eeprom_MI_addr_EX_
	movwf EEADR,0
	bcf EECON1,7,0
	bcf EECON1,6,0
	return

; eepromc@: defined at lib/tables.fs:19
eepromc_AT_
	call eeprom_MI_addr_EX_
	bsf EECON1,0,0
	movf EEDATA,0,0
	return

; eeprom@: defined at lib/tables.fs:21
eeprom_AT_
	call dup
	movf POSTDEC0,0
	movf POSTDEC0,0
	call eepromc_AT_
	movwf PREINC0,0
	clrf PREINC0,0
	call swap
	movf POSTDEC0,0,0
	infsnz POSTINC0,1,0
	incf INDF0,1,0
	movf POSTDEC0,0
	movf POSTDEC0,0
	call eepromc_AT_
	movwf PREINC0,0
	clrf PREINC0,0
	movf POSTDEC0,0,0
	movf POSTDEC0,0,0
	movwf INDF0,0
	return

; eepromc!: defined at lib/tables.fs:23
eepromc_EX_
	call eeprom_MI_addr_EX_
	movf POSTDEC0,0,0
	movff POSTDEC0,EEDATA
	bsf EECON1,2,0
	movlw 0x55
	movwf EECON2,0
	movlw 0xaa
	movwf EECON2,0
	bsf EECON1,1,0
_lbl___77
	btfsc EECON1,1,0
	bra _lbl___77
	bcf EECON1,2,0
	bcf PIR2,4,0
	return

; nibble-to-hex: defined at lib/strings.fs:11
nibble_MI_to_MI_hex
	movf POSTDEC0,0,0
	movlw 0xf6
	addwf INDF0,1,0
	movlw 0x3a
	btfsc STATUS,0,0
	addlw 7
	addwf POSTDEC0,0,0
	return

; type: defined at lib/strings.fs:27
type
	call dup
	movf POSTDEC0,0,0
	iorwf POSTDEC0,0,0
	btfsc STATUS,2,0
	goto _2drop
	movf POSTDEC0,0
	movf POSTDEC0,0
	movwf PREINC2,0
_lbl___93
	call dup
	call op_cfetch_tos
	call emit
	movf POSTDEC0,0,0
	infsnz POSTINC0,1,0
	incf INDF0,1,0
	decfsz INDF2,1,0
	bra _lbl___93
	movf POSTDEC2,1,0
	movf POSTDEC0,1,0
	movf POSTDEC0,1,0
	return

; .s: defined at lib/strings.fs:56
_DT_s
	movlw 60
	movwf PREINC0,0
	clrf PREINC0,0
	call emit
	call depth
	call dup
	call _DT_
	movlw 62
	movwf PREINC0,0
	clrf PREINC0,0
	call emit
	call dup
	movf POSTDEC0,0,0
	iorwf POSTDEC0,0,0
	bz _lbl___95
	call dup
	movlw 8
	movwf PREINC0,0
	clrf PREINC0,0
	call _GT_
	movf POSTDEC0,0,0
	iorwf POSTDEC0,0,0
	bz _lbl___96
	movf POSTDEC0,1,0
	movf POSTDEC0,1,0
	movlw LOW((_data_+0x8000))
	movwf PREINC0,0
	movlw HIGH((_data_+0x8000))
	movwf PREINC0,0
	movlw 4
	movwf PREINC0,0
	clrf PREINC0,0
	call type
	movlw 8
	movwf PREINC0,0
	clrf PREINC0,0
_lbl___96
	movf POSTDEC0,0
	movf POSTDEC0,0
	movwf PREINC2,0
_lbl___97
	call _space
	movff INDF2,PREINC0
	clrf PREINC0,0
	movlw LOW((-1))
	movf POSTDEC0,1,0
	addwf POSTINC0,1,0
	movlw HIGH((-1))
	addwfc INDF0,1,0
	call pick
	call _DT_
	decfsz INDF2,1,0
	bra _lbl___97
	movf POSTDEC2,1,0
	return
_lbl___95
	movf POSTDEC0,1,0
	movf POSTDEC0,1,0
	return

; memcpy: defined at lib/memory.fs:4
memcpy
	movff FSR2L,temp_x2
	movff FSR2H,(temp_x2+1)
	movff POSTDEC0,FSR2H
	movff POSTDEC0,FSR2L
	movff POSTDEC0,FSR1H
	movff POSTDEC0,FSR1L
memcpy_loop
	movff POSTINC1,POSTINC2
	decfsz WREG,1,0
	bra memcpy_loop
	movff temp_x2,FSR2L
	movff (temp_x2+1),FSR2H
	return

; can-receive-buffer0: defined at lib/canlib.fs:31
can_MI_receive_MI_buffer0
	movff RXB0DLC,PREINC0
	clrf PREINC0,0
	movlw 0xf
	movwf PREINC0,0
	clrf PREINC0,0
	call and
	call dup
	movf POSTDEC0,0,0
	movff POSTDEC0,can_MI_msg_MI_length
	movf POSTDEC0,0,0
	iorwf POSTDEC0,0,0
	bz _lbl___124
	movlw LOW(RXB0D0)
	movwf PREINC0,0
	movlw HIGH(RXB0D0)
	movwf PREINC0,0
	movlw can_MI_msg
	movwf PREINC0,0
	clrf PREINC0,0
	movf can_MI_msg_MI_length,0,0
	call memcpy
_lbl___124
	clrf can_MI_msg_MI_flags,0
	btfsc RXB0DLC,6,0
	bsf can_MI_msg_MI_flags,0,0
	movff RXB0SIDL,PREINC0
	movff RXB0SIDH,PREINC0
	call _5_GT__GT_
	movff POSTDEC0,(can_MI_arbitration+1)
	movff POSTDEC0,can_MI_arbitration
	bcf RXB0CON,7,0
	return

; can-set-rtr: defined at lib/canlib.fs:91
can_MI_set_MI_rtr
	movlw LOW(TXB0DLC)
	movwf PREINC0,0
	movlw HIGH(TXB0DLC)
	movwf PREINC0,0
	call tx0_GT_txn
	movff POSTDEC0,FSR1H
	movff POSTDEC0,FSR1L
	bsf INDF1,6,0
	return

; can-clr-rtr: defined at lib/canlib.fs:92
can_MI_clr_MI_rtr
	movlw LOW(TXB0DLC)
	movwf PREINC0,0
	movlw HIGH(TXB0DLC)
	movwf PREINC0,0
	call tx0_GT_txn
	movff POSTDEC0,FSR1H
	movff POSTDEC0,FSR1L
	bcf INDF1,6,0
	return

; can-disable-all-filters: defined at lib/canlib.fs:126
can_MI_disable_MI_all_MI_filters
	movlw LOW(0x7ff)
	movwf PREINC0,0
	movlw HIGH(0x7ff)
	movwf PREINC0,0
	movlw 0
	call can_MI_set_MI_mask
	movlw LOW(0x7ff)
	movwf PREINC0,0
	movlw HIGH(0x7ff)
	movwf PREINC0,0
	movlw 1
	call can_MI_set_MI_mask
	movlw 7
	movwf PREINC2,0
_lbl___173
	movlw LOW(0x7ff)
	movwf PREINC0,0
	movlw HIGH(0x7ff)
	movwf PREINC0,0
	movff INDF2,PREINC0
	clrf PREINC0,0
	movlw LOW((-1))
	movf POSTDEC0,1,0
	addwf POSTINC0,1,0
	movlw HIGH((-1))
	addwfc INDF0,1,0
	movf POSTDEC0,0
	movf POSTDEC0,0
	call can_MI_set_MI_filter
	decfsz INDF2,1,0
	bra _lbl___173
	movf POSTDEC2,1,0
	return

; can-receive-1: defined at lib/canlib.fs:193
can_MI_receive_MI_1
	call can_MI_receive
	movff can_MI_msg_MI_0,PREINC0
	movff (can_MI_msg_MI_0+1),PREINC0
	movff can_MI_arbitration,PREINC0
	movff (can_MI_arbitration+1),PREINC0
	return

;---------------------------------------------------------
; Section: memory
;---------------------------------------------------------

; temp_x1: defined at lib/primitives.fs:22
temp_x1 equ 0x0

; temp_x2: defined at lib/primitives.fs:23
temp_x2 equ 0x2

; can-msg: defined at lib/canlib.fs:1
can_MI_msg equ 0x12

; can-msg-0: defined at lib/canlib.fs:2
can_MI_msg_MI_0 equ 0x12

; can-msg-length: defined at lib/canlib.fs:10
can_MI_msg_MI_length equ 0x1a

; can-msg-flags: defined at lib/canlib.fs:11
can_MI_msg_MI_flags equ 0x1b

; can-buffer: defined at lib/canlib.fs:13
can_MI_buffer equ 0x1c

; can-offset: defined at lib/canlib.fs:14
can_MI_offset equ 0x1d

; can-arbitration: defined at lib/canlib.fs:15
can_MI_arbitration equ 0x1e

; can-flags: defined at lib/canlib.fs:16
can_MI_flags equ 0x20

;---------------------------------------------------------
; Section: static data
;---------------------------------------------------------

; defined at lib/strings.fs:60 as:
;  ...
_data_
	db 32,46,46,46

; defined at tests/test-can.fs:10 as:
; Sending a message 1234 with arbitration 378
_data___1
	db 83,101,110,100,105,110,103,32
	db 97,32,109,101,115,115,97,103
	db 101,32,49,50,51,52,32,119
	db 105,116,104,32,97,114,98,105
	db 116,114,97,116,105,111,110,32
	db 51,55,56

; defined at tests/test-can.fs:13 as:
; Receiving message
_data___2
	db 82,101,99,101,105,118,105,110
	db 103,32,109,101,115,115,97,103
	db 101

; defined at tests/test-can.fs:16 as:
; Arbitration: 
_data___3
	db 65,114,98,105,116,114,97,116
	db 105,111,110,58,32

; defined at tests/test-can.fs:17 as:
; RTR:         
_data___4
	db 82,84,82,58,32,32,32,32
	db 32,32,32,32,32

; defined at tests/test-can.fs:18 as:
; Data:        
_data___5
	db 68,97,116,97,58,32,32,32
	db 32,32,32,32,32

; defined at tests/test-can.fs:19 as:
; Sending a RTR with arbitration 176
_data___6
	db 83,101,110,100,105,110,103,32
	db 97,32,82,84,82,32,119,105
	db 116,104,32,97,114,98,105,116
	db 114,97,116,105,111,110,32,49
	db 55,54

; defined at tests/test-can.fs:24 as:
; Arbitration: 
_data___7
	db 65,114,98,105,116,114,97,116
	db 105,111,110,58,32

; defined at tests/test-can.fs:25 as:
; RTR:         
_data___8
	db 82,84,82,58,32,32,32,32
	db 32,32,32,32,32

END
